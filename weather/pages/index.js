import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import { useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import { useEffect } from 'react';

import Weather from '../components/Weather';
import Spinner from '../components/Spinner';

export default function Home() {

  const [coords, setCoords] = useState();
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);

  const urlSearch = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;
  // const urlStart = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const getCurrentLocation = () => {
    if ('geolocation' in navigator) {
      navigator.geolocation.getCurrentPosition(position => {
        setCoords(position.coords);
      });
    } else {
      console.log("unavailable");
    }
  }

  useEffect(() => {
    console.log(coords);
  }, []);




  const fetchWeather = (e) => {
    e.preventDefault();
    setLoading(true);

    axios.get(urlSearch)
      .then((res) => {
        setWeather(res.data);
      })
      .catch((err) => {
        console.log("Error: ", err);
      });

    setCity('');
    setLoading(false);
  };

  if (loading) {
    return <Spinner />
  } else {
    return (
      <div className='h-[100vh] relative w-[100%]'>
        <Head>
          <title>Weather - Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        {/* Overlay */}
        <div className='absolute top-0  left-0 right-0 bottom-0 bg-black/40 z-[1]' />

        {/* Background Image */}
        <Image
          src='https://images.unsplash.com/photo-1601134467661-3d775b999c8b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1975&q=80'
          layout='fill'
          className='object-fill'
        />

        {/* Search Bar */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-10'>
          <form onSubmit={fetchWeather} className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'>
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='bg-transparent border-none text-white focus:outline-none text-2xl placeholder:text-white'
                type="text"
                placeholder="Search City"
              />
            </div>

            <button onClick={fetchWeather}><BsSearch size={20} /></button>
          </form>
        </div>

        {/* Weather */}
        {weather.main && <Weather data={weather} />}

      </div>
    );
  }


};
